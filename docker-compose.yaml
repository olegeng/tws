version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5

  datastore:
    image: postgres:13
    container_name: airflow_datastore
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: datastore
    volumes:
      - datastore-db-volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json

  airflow-init:
    image: apache/airflow:2.9.1
    container_name: airflow-init
    entrypoint: bash
    command: >
      -c "
      pip install -r /requirements.txt &&
      airflow db upgrade &&
      airflow users create --username airflow --password airflow --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 7shwFV8oFMSIh7pCGg7Q23G8P7SRVXIV7lqOJSF8DmI
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    image: apache/airflow:2.9.1
    container_name: airflow_webserver
    command: >
      bash -c "pip install -r /requirements.txt && exec airflow webserver"
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 7shwFV8oFMSIh7pCGg7Q23G8P7SRVXIV7lqOJSF8DmI
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    depends_on:
      airflow-init:
        condition: service_completed_successfully


  airflow-scheduler:
    image: apache/airflow:2.9.1
    container_name: airflow_scheduler
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 7shwFV8oFMSIh7pCGg7Q23G8P7SRVXIV7lqOJSF8DmI
    command: >
      bash -c "pip install -r /requirements.txt && exec airflow scheduler"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
  datastore-db-volume:
